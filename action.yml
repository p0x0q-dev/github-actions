name: 'build and deploy on gke'
author: 'p0x0q-dev'
description: |-
  This action builds and deploys a docker image on gke.
  It uses Google Artifact Registry as a docker registry.
  It uses kustomize to deploy the image.
  It uses workload identity to authenticate to Google Cloud.
  It uses a service account to authenticate to Google Artifact Registry.
  It uses a service account to authenticate to Google Cloud.

inputs:
  WORKLOAD_IDENTITY_PROVIDER:
    description: "The workload identity provider to use"
    required: true

  SERVICE_ACCOUNT:
    description: "The service account to use"
    required: true

  GAR_LOCATION:
    description: "The location of the Google Artifact Registry"
    required: true

  PROJECT_ID:
    description: "The project ID"
    required: true

  REPOSITORY:
    description: "The repository name"
    required: true

  IMAGE:
    description: "The image name"
    required: true

  GKE_ZONE:
    description: "The GKE cluster zone"
    required: true

  DEPLOYMENT_NAME:
    description: "The deployment name"
    required: true

  OIDC_AUDIENCE:
    description: "The OIDC audience"
    required: true

  DEPLOY_ENV:
    description: "The deployment environment"
    required: true

  NAMESPACE:
    description: "The namespace"
    required: true

runs:
  using: "composite"
  steps:
    # runs-on: ubuntu-latest
    # timeout-minutes: 30
    # permissions:
    #   contents: "read"
    #   id-token: "write"

    - uses: actions/checkout@v3
    - id: "auth"
      name: "Authenticate to Google Cloud"
      uses: "google-github-actions/auth@v1"
      with:
        token_format: "access_token"
        workload_identity_provider: ${{ inputs.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ inputs.SERVICE_ACCOUNT }}
        audience: ${{ inputs.OIDC_AUDIENCE }}

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://${{ inputs.GAR_LOCATION }}-docker.pkg.dev
      shell: bash

    - name: App Build
      working-directory: ./
      run: |-
        docker build \
          --tag "${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.REPOSITORY }}/${{ inputs.IMAGE }}:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          -f ./Dockerfile .
      shell: bash

    - name: App Publish
      working-directory: ./
      run: |-
        docker push "${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.REPOSITORY }}/${{ inputs.IMAGE }}:$GITHUB_SHA"
      shell: bash

    # - uses: actions/checkout@v3
    # - id: "auth"
    #   name: "Authenticate to Google Cloud"
    #   uses: "google-github-actions/auth@v1"
    #   with:
    #     token_format: "access_token"
    #     workload_identity_provider: ${{ inputs.WORKLOAD_IDENTITY_PROVIDER }}
    #     service_account: ${{ inputs.SERVICE_ACCOUNT }}
    #     audience: ${{ inputs.OIDC_AUDIENCE }}

    - name: Set up Kustomize
      working-directory: ./
      run: |-
        curl -sfL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.0.3/kustomize_v5.0.3_linux_amd64.tar.gz | tar xz
        chmod u+x ./kustomize
        mv ./kustomize /usr/local/bin
      shell: bash

    - name: App Deploy
      working-directory: ./
      run: |-
        cd /root/deployment/${{ github.repository }}/k8s/overlays/${{ inputs.DEPLOY_ENV}}
        /usr/local/bin/kustomize edit set image image=${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.REPOSITORY }}/${{ inputs.IMAGE }}:$GITHUB_SHA
        /usr/local/bin/kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/${{ inputs.DEPLOYMENT_NAME}} -n ${{ inputs.NAMESPACE }} --timeout=20m
        kubectl get services -o wide -n ${{ inputs.NAMESPACE }}

        kubectl get pods -n ${{ inputs.NAMESPACE }} | grep OutOfcpu | awk '{print $1}' | xargs kubectl delete pods -n ${{ inputs.NAMESPACE }} || true
      shell: bash
